/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CommunicationController;
import domain.Gazdinstvo;
import domain.Poljoprivrednik;
import domain.Stado;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author anakl
 */
public class FrmKlijent extends javax.swing.JFrame {

    private Poljoprivrednik p;
    private List<Gazdinstvo> gazdinstva;
    private TableModelKlijent tmk;
    private List<Stado> stada;

    /**
     * Creates new form FrmKlijent
     */
    public FrmKlijent(Poljoprivrednik p) {
        initComponents();
        this.p = p;
        gazdinstva = new ArrayList<>();
        stada = new ArrayList<>();
        tmk = new TableModelKlijent(stada);
        setLocationRelativeTo(null);
        prepareView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnKreirajGazdinstvo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtGazdinstvoID = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDatumRegistracije = new javax.swing.JTextField();
        txtUkupnoSubvencija = new javax.swing.JTextField();
        txtNaziv = new javax.swing.JTextField();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKlijent = new javax.swing.JTable();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnKreirajGazdinstvo.setText("Kreiraj gazdinstvo");
        btnKreirajGazdinstvo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajGazdinstvoActionPerformed(evt);
            }
        });

        jLabel1.setText("GazdinstvoID:");

        txtGazdinstvoID.setText("id");

        jLabel2.setText("Naziv:");

        jLabel3.setText("Datum registracije:");

        jLabel4.setText("Ukupno subvencija:");

        txtUkupnoSubvencija.setEditable(false);

        btnDodaj.setText("Dodaj stado");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi stado");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        tblKlijent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblKlijent);

        btnSacuvaj.setText("Sacuvaj gazdinstvo");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDatumRegistracije)
                            .addComponent(txtUkupnoSubvencija)
                            .addComponent(txtNaziv)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnKreirajGazdinstvo)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtGazdinstvoID))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDodaj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnObrisi))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSacuvaj))
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnKreirajGazdinstvo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtGazdinstvoID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDatumRegistracije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUkupnoSubvencija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSacuvaj)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        FrmStado frm = new FrmStado(tmk, txtUkupnoSubvencija);
        frm.setVisible(true);

    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        try {
            TableModelKlijent model = (TableModelKlijent) tblKlijent.getModel();
            int selectedRow = tblKlijent.getSelectedRow();
            CommunicationController.getInstance().obrisiStado(selectedRow);
            stada = CommunicationController.getInstance().vratiStadaIzMemorije();
            TableModelKlijent tmk = (TableModelKlijent) tblKlijent.getModel();

            BigDecimal ukupnaSubvencija = tmk.vratiUkupnoSubvencija();
            txtUkupnoSubvencija.setText(ukupnaSubvencija + "");
            model.azuriraj(stada);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnKreirajGazdinstvoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajGazdinstvoActionPerformed
        try {
            Long id = 0l;
            gazdinstva = CommunicationController.getInstance().getAllGazdinstva();
            if (gazdinstva.size() == 0) {
                id = 1l;
            } else {
                id = gazdinstva.get(gazdinstva.size() - 1).getGazdinstvoID() + 1L;
            }
            txtGazdinstvoID.setText(String.valueOf(id));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnKreirajGazdinstvoActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        try {
            Gazdinstvo g = new Gazdinstvo();
            g.setGazdinstvoID(Long.valueOf(txtGazdinstvoID.getText()));
            g.setDatumRegistracije(new SimpleDateFormat("dd.MM.yyyy.").parse(txtDatumRegistracije.getText()));
            g.setNaziv(txtNaziv.getText());
            g.setUkupnoSubvencija(new BigDecimal(txtUkupnoSubvencija.getText()));
            g.setPoljoprivrednik(p);
            stada = CommunicationController.getInstance().vratiStadaIzMemorije();
            List<Stado> dopunjenaStada = new ArrayList<>();
            Long id = 1L;
            for (Stado stado : stada) {
                stado.setGazdinstvo(g);
                stado.setStadoID(id++);
                dopunjenaStada.add(stado);
            }
            if (CommunicationController.getInstance().brojStada(g) >= 1) {
                if (CommunicationController.getInstance().brojGrlaUStadu(stada) == 1) {
                    if (CommunicationController.getInstance().brojZivotinja() == 1) {
                        CommunicationController.getInstance().saveGazdinstvo(g);
                        CommunicationController.getInstance().saveStada(dopunjenaStada);
                        JOptionPane.showMessageDialog(this, "Uspesno sacuvano gazdinstvo sa stadima!");
                    } else {
                        JOptionPane.showMessageDialog(this, "U stadu postoje zivotinje sa dupliranim nazivom! Greska.");
                        return;
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Ne moze se sacuvati stado sa 0 grla! Greska.");
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(this, "Gazdinstvu nije dodeljeno nijedno stado! Greska.");
                return;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Neuspesno sacuvano gazdinstvo sa stadima! Greska.");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnKreirajGazdinstvo;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblKlijent;
    private javax.swing.JTextField txtDatumRegistracije;
    private javax.swing.JLabel txtGazdinstvoID;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtUkupnoSubvencija;
    // End of variables declaration//GEN-END:variables

    private void prepareView() {
        tblKlijent.setModel(tmk);
        txtGazdinstvoID.setText("");

    }
}
